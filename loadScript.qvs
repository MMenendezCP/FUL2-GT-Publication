///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$#,##0.00;-$#,##0.00';
SET TimeFormat='h:mm:ss TT';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:μ;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';


SysActualYear	=	Date(now(),'YYYY');
SysLastYear		=	Date(AddYears(SysActualYear,-1),'YYYY');
SysTwoYearsAgo	=	Date(AddYears(SysActualYear,-2),'YYYY');
SysTreeYearsAgo	=	Date(AddYears(SysActualYear,-3),'YYYY');
SysFourYearsAgo	=	Date(AddYears(SysActualYear,-4),'YYYY');




text_connection = If(SubStringCount(DocumentTitle(), 'Full') >= 1, 'NEWEDIT_', 'PROD_');

// text_connection = If(SubStringCount(DocumentTitle(), 'NEWEDIT') >= 1, 'NEWEDIT_', If(SubStringCount(DocumentTitle(), 'NEWEDIT_GT') >= 1, 'NEWEDIT_GT', 'PROD_'));


Countries_dim:
LOAD
	[x1val] 							AS [Transposition],
    1 									AS [EU_Flag]						

where [x1val]<> 'Edition' and [x1val]<> 'UK';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_IND_1.csv';

SQL SELECT 
	"x1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";
Concatenate
LOAD * Inline [
Transposition, EU_Flag
'EU', 1
'EU AVG', 1
'-', 1
'Avg', 1
'TR', 1
];


[EE_EFTA_Countries_dim]:
LOAD
	[x1val] 							AS [Transposition],
    0 									AS [EU_Flag]
    
where [x1val] <> 'Date' and [x1val] <> '' ;

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_TRA_DEF_EFT.csv';

SQL SELECT 
	"x1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


MAPPINGCOUNTRIES:
Mapping
LOAD * Inline [
FROM,TO
AT,Austria
BE,Belgium
BG,Bulgaria
CY,Cyprus
CZ,Czechia
DK,Denmark
DE,Germany
EE,Estonia
EL,Greece
ES,Spain
FI,Finland
FR,France
HR,Croatia
HU,Hungary
IE,Ireland
IS,Iceland
IT,Italy
LT,Lithuania
LI,Liechtenstein
LU,Luxembourg
LV,Latvia
MT,Malta
NL,Netherlands
NO,Norway
PL,Poland
PT,Portugal
RO,Romania
SE,Sweden
SI,Slovenia
SK,Slovakia
];


 
    
Country_DIM:
LOAD 
	Country_ID,
    ISO_code,
    [EU_Flag],
    Country_Flag,
    RealName_aux,
    if (not isnull(Country_Flag), 'https://single-market-scoreboard.ec.europa.eu/countries/' & [RealName_aux]) AS Real_name;
LOAD
    AutoNumber([Transposition])			AS Country_ID,
    [Transposition] 					AS [ISO_code],
    [EU_Flag],
    if (ApplyMap('MAPPINGCOUNTRIES', [Transposition], 'XX') <> 'XX', 'https://web.qap.dataplatform.tech.ec.europa.eu/Content/flags/' & [Transposition] & '.png') AS Country_Flag,
    ApplyMap('MAPPINGCOUNTRIES', [Transposition]) 												AS RealName_aux
Resident [Countries_dim];

Drop Table Countries_dim;
    
 




Indicators_DIM:
LOAD * Inline [
Indicator_ID, 		indicator, 					indicator_print, transposition_flag, infringements_flag, imi_flag, General_flag
1, 				'Indicator 1trans', 			'Indicator 1', 			1, 					0, 				0,			0
2, 				'Indicator 2trans', 			'Indicator 2', 			1, 					0, 				0,			0
3, 				'Indicator 3trans', 			'Indicator 3', 			1, 					0, 				0,			0
4, 				'Indicator 4trans', 			'Indicator 4', 			1, 					0, 				0,			0
5, 				'Indicator 5trans', 			'Indicator 5', 			1, 					0, 				0,			0
6, 				'Indicator 1infg', 				'Indicator 1', 			0, 					1, 				0,			0
7, 				'Indicator 2infg', 				'Indicator 2', 			0, 					1, 				0,			0
8, 				'Indicator 3infg', 				'Indicator 3', 			0, 					1, 				0,			0
9, 				'Indicator 4infg', 				'Indicator 4', 			0, 					1, 				0,			0
10, 			'Indicator 1imi', 				'Indicator 1', 			0, 					0, 				1,			0
11, 			'Indicator 2imi', 				'Indicator 2', 			0, 					0, 				1,			0
12, 			'Indicator 3imi', 				'Indicator 3', 			0, 					0, 				1,			0
13, 			'Indicator 4imi', 				'Indicator 4', 			0, 					0, 				1,			0
14, 			'Indicator 5imi', 				'Indicator 5', 			0, 					0, 				1,			0
15,				'Transposition gen data',		'Transposition',		0,					0,				0,			1			
16,				'Infringements gen data',		'Infringements',		0,					0,				0,			1		
17,				'IMI gen data',					'IMI',					0,					0,				0,			1
18,				'SOLVIT gen data',				'SOLVIT (staffing)',	0,					0,				0,			1		

];



///$tab 1.- Transposition
[Performance by enforcement tool]:
LOAD
    Countries								AS [ISO_code],
    Transposition 							AS [Transposition gen data],
    Infringements 							AS [Infringements gen data],
    IMI 									AS [IMI gen data],
    SOLVIT 									AS [SOLVIT gen data]

FROM [lib://SMS/TL_PO.xlsx]

(ooxml, embedded labels, table is PO_GT);


[indicador1A]:
LOAD
	[x1val] 							AS [Transposition],
	[y1val] 							AS value_transposition_ind1
    
where [x1val]<> 'Edition' and [x1val]<> 'UK';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_IND_1.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicador2]:
LOAD
	[x1val] 							AS [Transposition],
	[y1val] 							AS value_transposition_ind2
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '' and [x1val]<> 'Avg';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_IND_2.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicador3]:
LOAD	
	[x1val] 							AS [Transposition],
	[x2val] 							AS value_transposition_ind3
    
where [x1val] <> 'MS' and [x1val]<> 'Avg';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_TL_IND_3.csv (ec2amaz-t6hn9ho_commdes_user1)';

SQL SELECT 
	"x1val",
	"x2val"    
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicador4]:
LOAD
	[x1val] 							AS [Transposition],
	[y1val] 							AS value_transposition_ind4
    
where [x1val]<> 'Edition' and [x1val]<> 'UK' and [x1val]<> 'Avg';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_IND_4.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[GT_TRA_IND_4]:
Crosstable (IND4Year, IND4Values, 1)
LOAD 
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [2021],
	[y2val] 							AS [2020],
	[y3val] 							AS [2019],
	[y4val] 							AS [2018]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_IND_4.csv';

SQL SELECT 
	"x1val",
	"y1val",
	"y2val",
	"y3val",
    "y4val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[GT_TRA_IND_4B]:
Crosstable (IND4BYear, IND4BValues, 1)
LOAD
	[x1val] 							AS [ISO_code],
    [y1val] 							AS [2021],
	[y2val] 							AS [2020],
	[y3val] 							AS [2019],
	[y4val] 							AS [2018]

where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_IND_1B_4B.csv';

SQL SELECT 
	"x1val",
	"y1val",
	"y2val",
	"y3val",
    "y4val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[indicador5]:
LOAD
	[x1val] 							AS [Transposition],
	[y1val] 							AS value_transposition_ind5
    
where [x1val]<> 'Edition' and [x1val]<> 'UK' and [x1val]<> 'Avg';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_IND_5.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



Avg_TRA:
LOAD 
	'Avg' 											AS [Transposition], 
	round(avg(value_transposition_ind1), 0.1) 		AS valAvgTra1
RESIDENT indicador1A
group by 'Avg';
Left Join
Left Join
LOAD 
	'Avg' 											AS [Transposition],
	round(avg(value_transposition_ind2), 0.1) 		AS valAvgTra2
RESIDENT indicador2;
Left Join
LOAD 
	'Avg' 											AS [Transposition], 
	round(avg(value_transposition_ind4), 0.1) 		AS valAvgTra4
RESIDENT indicador4;
Left Join
LOAD 
	'Avg' 											AS [Transposition],
	round(avg(value_transposition_ind5), 0.1) 		AS valAvgTra5
RESIDENT indicador5;



// ---------------------------------------------------------------------------

resAvgTra1 = Peek('valAvgTra1',0,'Avg_TRA');
resAvgTra2 = Peek('valAvgTra2',0,'Avg_TRA');
resAvgTra3 = 'N/A'
resAvgTra4 = Peek('valAvgTra4',0,'Avg_TRA');
resAvgTra5 = Peek('valAvgTra5',0,'Avg_TRA');




[No EU Transposition Deficit]:
LOAD
	[x1val] 							AS [EEA ΕFTA country],
	[y1val] 							AS [Transposition Deficit]
    
where [x1val] <> 'Date' and [x1val] <> '' and [x1val] <> 'EEA EFTA';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_TRA_DEF_EFT.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";

  
[No EU Transposition Directives]:
LOAD
	[x1val] 							AS [EEA ΕFTA country],
	[y1val] 							AS [No EU Trans Directives]

where [x1val] <> 'Date' and [x1val] <> '' and [x1val] <> '-';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_TRA_DEF_EFT_2.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[EU_Transposition_deficit]:
Crosstable ([ISO_code], [EU Transposition Deficit])
LOAD
	Text([x1val]) 						AS [Year (Transposition Deficit)],
	[x2val] 							AS [AT],
	[x3val] 							AS [BE],
	[x4val] 							AS [BG],
	[x5val] 							AS [CY],
	[x6val] 							AS [CZ],
	[x7val] 							AS [DE],
	[x8val] 							AS [DK],
	[x9val] 							AS [EE],
	[x10val]							AS [EL],
	[x11val]							AS [ES],
	[x12val]							AS [FI],
	[x13val]							AS [FR],
	[x14val]							AS [HR],
	[x15val]							AS [HU],
	[x16val]							AS [IE],
	[x17val]							AS [IT],
	[x18val]							AS [LT],
	[x19val]							AS [LU],
	[x20val]							AS [LV],
	[x21val]							AS [MT],
	[x22val]							AS [NL],
	[x23val]							AS [PL],
	[x24val]							AS [PT],
	[x25val]							AS [RO],
	[x26val]							AS [SE],
	[x27val]							AS [SI],
	[x28val]							AS [SK],
	[x29val]							AS [UK],
	[x30val]							AS [EU]
    
where [x1val] <> 'Years' and [x1val] <> 'UK';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_PMS_TRA_DEF_EU.csv';

SQL SELECT 
"x1val",
	"x2val",
	"x3val",
	"x4val",
	"x5val",
	"x6val",
	"x7val",
	"x8val",
	"x9val",
	"x10val",
	"x11val",
	"x12val",
	"x13val",
	"x14val",
	"x15val",
	"x16val",
	"x17val",
	"x18val",
	"x19val",
	"x20val",
	"x21val",
	"x22val",
	"x23val",
	"x24val",
	"x25val",
	"x26val",
	"x27val",
	"x28val",
	"x29val",
	"x30val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[No_EU_Transposition_deficit]:
Crosstable ([ISO_code], [No EU Transposition Deficit])
LOAD
	Text([x1val]) 						AS [Year EFTA],
    [x2val] 							AS [IS],
	[x3val] 							AS [LI],
	[x4val] 							AS [NO],
	[x5val] 							AS [EEA EFTA]
    
where [x1val] <> 'Years' and [x1val] <> 'UK';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_PMS_TRA_DEF_EFTA.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"x3val",
	"x4val",
	"x5val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Directives undergoing completeness]:
LOAD
	[x1val] 							AS [ISO_code],
    [y1val] 							AS [Directives completeness]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_COM_CHE.csv';

SQL SELECT 
	"x1val",
	"y1val",
	"y2val",
	"y3val",
    "y4val",
    "y5val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Changes in the average Transposition deficit]:
LOAD
	Text([x1val]) 							AS [Year],
	[x2val] 								AS [Changes in the average transposition deficit percentage]
    
where [x1val] <> 'Date' and [x1val] <> '';


LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_CHA_TRA_DEF.csv';

SQL SELECT 
	"x1val",
	"x2val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";




[Changes in the incompleteness rate]:
LOAD
	Text([x1val]) 							AS [Year],
	[x2val] 								AS [Value_incompleteness]
    
where [x1val] <> 'Date';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRA_COM_RAT.csv';

SQL SELECT 
	"x1val",
	"x2val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";






[ALLMETRICS_TRANS]:
// --------------------------------------------------------------
NoConcatenate
LOAD
    [ISO_code],
    [Transposition gen data],
    [Infringements gen data],
    [IMI gen data],
    [SOLVIT gen data],
    'Current'							AS [Year]
Resident [Performance by enforcement tool];
left Join
LOAD
	[Transposition] 					AS [ISO_code],
	[value_transposition_ind1] 			AS [Indicator 1trans],
    'Current'							AS [Year]
Resident [indicador1A];
left Join
LOAD
	[Transposition] 					AS [ISO_code],
	[value_transposition_ind2] 			AS [Indicator 2trans],
    'Current'							AS [Year]
Resident [indicador2];
left Join
LOAD	
	[Transposition] 					AS [ISO_code],
	[value_transposition_ind3] 			AS [Indicator 3trans],
    'Current'							AS [Year]
Resident [indicador3];
left Join
LOAD
	[Transposition] 					AS [ISO_code],
	[value_transposition_ind4] 			AS [Indicator 4trans],
    'Current'							AS [Year]
Resident [indicador4];
outer Join
LOAD 
	[ISO_code],
	[IND4Year] 							AS [Year],
	[IND4Values] 						AS [Indicator 4.2trans]
Resident [GT_TRA_IND_4];
left Join
LOAD 
	[ISO_code],
	[IND4BYear] 						AS [Year],
	[IND4BValues] 						AS [Indicator 4.2Btrans]
Resident [GT_TRA_IND_4B];
left Join
LOAD
	[Transposition] 					AS [ISO_code],
	[value_transposition_ind5] 			AS [Indicator 5trans],
    'Current'							AS [Year]
Resident [indicador5];
Concatenate
LOAD 
	[Transposition]						AS [ISO_code], 
    valAvgTra1							AS [Indicator 1trans],
    valAvgTra2							AS [Indicator 2trans],
    'N/A'								AS [Indicator 3trans],
    valAvgTra4							AS [Indicator 4trans],
    valAvgTra5							AS [Indicator 5trans],
    'Current'					        AS Year
Resident [Avg_TRA];
left Join
LOAD
	[EEA ΕFTA country] 					AS [ISO_code],
	[Transposition Deficit],
    'Current'							AS [Year]
Resident [No EU Transposition Deficit];
left Join
LOAD
	[EEA ΕFTA country] 					AS [ISO_code],
	[No EU Trans Directives],
    'Current'							AS [Year]
Resident [No EU Transposition Directives];
outer Join
LOAD
	[Year (Transposition Deficit)] 		AS [Year],
	[ISO_code],
	[EU Transposition Deficit]
Resident [EU_Transposition_deficit];
outer Join
LOAD
	[Year EFTA] 						AS [Year],
    [ISO_code],
	[No EU Transposition Deficit]
Resident [No_EU_Transposition_deficit];
left join
LOAD
	[ISO_code],
    [Directives completeness],
    'Current'							AS [Year]
Resident [Directives undergoing completeness];
outer Join
LOAD
	[Year],
	[Changes in the average transposition deficit percentage],
    '-' 								AS [ISO_code]
Resident [Changes in the average Transposition deficit];
left Join
LOAD
	[Year],
	[Value_incompleteness],
    '-' 								AS [ISO_code]
Resident [Changes in the incompleteness rate];



Drop Table [Performance by enforcement tool], [indicador1A], [indicador2], [indicador3], [indicador4], [indicador5], [Avg_TRA], [GT_TRA_IND_4], [GT_TRA_IND_4B], [No EU Transposition Deficit], [No EU Transposition Directives], [EU_Transposition_deficit], [No_EU_Transposition_deficit], [Directives undergoing completeness], [Changes in the average Transposition deficit], [Changes in the incompleteness rate];


















///$tab 2.- Infringements
[indicator 1infg]:
LOAD
	[x1val] 									AS [Infringements],
    [y1val] 									AS [Indicator 1infg],
	[y2val] 									AS [GT_INF_IND_1.2020],
	[y3val] 									AS [GT_INF_IND_1.2019],
	[y4val] 									AS [GT_INF_IND_1.2018],
    [y5val] 									AS [GT_INF_IND_1.2017]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_INF_IND_1.csv';

SQL SELECT 
	"x1val",
    "y1val",
	"y2val",
	"y3val",
	"y4val",
    "y5val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[GT_INF_IND_1_table]:
Crosstable (INF_IND1_Year, INF_IND1_Values, 1)
LOAD
	[Infringements]								AS [ISO_code],
	[GT_INF_IND_1.2018] 						AS [2018],
	[GT_INF_IND_1.2019] 						AS [2019],
	[GT_INF_IND_1.2020] 						AS [2020],
	[Indicator 1infg] 							AS [2021]
RESIDENT [indicator 1infg];



[indicator 2infg]:
LOAD
	[x1val] 									AS [Infringements],
	[y1val] 									AS [Indicator 2infg]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_INF_IND_2.csv';

SQL SELECT
	"x1val",
    "y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[indicator 3infg]:
LOAD
	[x1val] 									AS [ISO_code],
	[y1val] 									AS [Indicator 3infg]

where [x1val]<> 'Edition' and [x1val]<> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_INF_IND_3.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[GT_INF_IND_3]:
LOAD
	[x1val] 									AS [Infringements],
    [y1val] 									AS [Indicator 3.2infg]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_INF_IND_3B.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[indicator 4infg]:
LOAD
	[x1val] 									AS [ISO_code],
	[y1val] 									AS [Indicator 4infg]

where [x1val]<> 'Edition' and [x1val]<> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_INF_IND_4.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";




[GT_INF_IND_4]:
LOAD
	[x1val] 									AS [Infringements],
    [y1val] 									AS [Indicator 4.2infg]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_INF_IND_4B.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";




Avg_INF:
LOAD 
	[Infringements] 							AS AVGINF_Label, 
	[Indicator 1infg] 							AS valAvgINF1
RESIDENT [indicator 1infg]
where [Infringements]='Avg';
LEFT JOIN
LOAD 
	[Infringements] 							AS AVGINF_Label, 
	[Indicator 2infg] 							AS valAvgINF2
RESIDENT [indicator 2infg]
where [Infringements]='Avg';
LEFT JOIN
LOAD 
	[ISO_code] 									AS AVGINF_Label, 
	[Indicator 3infg]							AS valAvgINF3
RESIDENT [indicator 3infg]
where [ISO_code]='Avg';
LEFT JOIN
LOAD 
	[ISO_code] 									AS AVGINF_Label, 
	[Indicator 4infg]							AS valAvgINF4
RESIDENT [indicator 4infg]
where [ISO_code]='Avg';

resAvgInf1=Peek('valAvgINF1',0,'Avg_INF');
resAvgInf2=Peek('valAvgINF2',0,'Avg_INF');
resAvgInf3=Peek('valAvgINF3',0,'Avg_INF');
resAvgInf4=Peek('valAvgINF4',0,'Avg_INF');


Drop Table Avg_INF;



[Pending_Cases]:
Crosstable (Year_Pending_cases, Pending_cases_values, 1)
LOAD
	[x1val] 									AS [ISO_code],
    [y1val] 									AS [2021],
	[y2val] 									AS [2020],
	[y3val] 									AS [2019],
	[y4val] 									AS [2018]
								
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_INF_PEN_CAS_EFT.csv';

SQL SELECT 
	"x1val",
	"y1val",
	"y2val",
	"y3val",
    "y4val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";




EU_Infringements_deficit:
Crosstable ([ISO_code], [EU_Infringements_deficit])
LOAD
	Text([x1val]) 								AS [Year (Infringements)],
	[x2val] 									AS [AT],
	[x3val] 									AS [BE],
	[x4val] 									AS [BG],
	[x5val] 									AS [CY],
	[x6val] 									AS [CZ],
	[x7val] 									AS [DE],
	[x8val] 									AS [DK],
	[x9val] 									AS [EE],
	[x10val] 									AS [EL],
	[x11val] 									AS [ES],
	[x12val] 									AS [FI],
	[x13val] 									AS [FR],
	[x14val] 									AS [HR],
	[x15val] 									AS [HU],
	[x16val] 									AS [IE],
	[x17val] 									AS [IT],
	[x18val] 									AS [LT],
	[x19val] 									AS [LU],
	[x20val] 									AS [LV],
	[x21val] 									AS [MT],
	[x22val] 									AS [NL],
	[x23val] 									AS [PL],
	[x24val] 									AS [PT],
	[x25val] 									AS [RO],
	[x26val] 									AS [SE],
	[x27val] 									AS [SI],
	[x28val] 									AS [SK],
	[x29val] 									AS [UK],
	[x30val] 									AS [EU AVG]
    
where [x1val] <> 'Years' and [x1val] <> 'UK';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_PMS_INF_EVO_EU.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"x3val",
	"x4val",
	"x5val",
	"x6val",
	"x7val",
	"x8val",
	"x9val",
	"x10val",
	"x11val",
	"x12val",
	"x13val",
	"x14val",
	"x15val",
	"x16val",
	"x17val",
	"x18val",
	"x19val",
	"x20val",
	"x21val",
	"x22val",
	"x23val",
	"x24val",
	"x25val",
	"x26val",
	"x27val",
	"x28val",
	"x29val",
	"x30val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";

No_EU_Infringements_deficit:
Crosstable ([ISO_code], [No_EU_Infringements_deficit])
LOAD
	Text([x1val]) 							AS [Year EFTA (Infringements)],
    [x2val] 								AS [IS],
	[x3val] 								AS [LI],
	[x4val] 								AS [NO],
	[x5val] 								AS [EEA EFTA]
    
where [x1val] <> 'Years' and [x1val] <> 'UK';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_PMS_INF_EVO_EFTA.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"x3val",
	"x4val",
	"x5val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[Changes in the average Infringements deficit]:
Load
	Text([x1val] ) 								AS [Year],
	[x2val] 									AS [Changes in the average infringements deficit percentage]
    
where [x1val] <> 'Year';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_INF_NO_OF_INF_CAS.csv';

SQL SELECT 
	"x1val",
	"x2val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[ALLMETRICS_TRANS_INF]:
// --------------------------------------------------------------
NoConcatenate
LOAD
    [ISO_code],
    [Year],
    [Transposition gen data],
    [Infringements gen data],
    [IMI gen data],
    [SOLVIT gen data],
	[Indicator 1trans],
	[Indicator 2trans],
	[Indicator 3trans],
	[Indicator 4trans],
	[Indicator 4.2trans],
	[Indicator 4.2Btrans],
	[Indicator 5trans],
	[Transposition Deficit],
	[No EU Trans Directives],
	[EU Transposition Deficit],
	[No EU Transposition Deficit],
    [Directives completeness],
	[Changes in the average transposition deficit percentage],
	[Value_incompleteness]
Resident [ALLMETRICS_TRANS];
// --------------------------------------------------------------
left Join
LOAD
	[Infringements]								AS [ISO_code],
    [Indicator 1infg],
    'Current'									AS [Year]
Resident [indicator 1infg];
left Join
LOAD
	[ISO_code],
	[INF_IND1_Year]								AS [Year], 					
	[INF_IND1_Values] 							AS [Indicator 1.2infg]				
Resident GT_INF_IND_1_table;
left Join 
LOAD
	[Infringements]								AS [ISO_code],
	[Indicator 2infg],
    'Current'									AS [Year]
Resident [indicator 2infg];
left Join
LOAD
	[ISO_code],
	[Indicator 3infg],
    'Current'									AS [Year]
Resident [indicator 3infg];
left Join
LOAD
	[Infringements]								AS [ISO_code],
    [Indicator 3.2infg],
    'Current'									AS [Year]
Resident [GT_INF_IND_3];
left Join 
LOAD
	[ISO_code],
	[Indicator 4infg],
    'Current'									AS [Year]
Resident [indicator 4infg];
left join 
LOAD
	[Infringements]								AS [ISO_code],
    [Indicator 4.2infg],
    'Current'									AS [Year]
Resident [GT_INF_IND_4];
outer Join 
LOAD
	[ISO_code],
    [Year_Pending_cases]						AS [Year],
	[Pending_cases_values]						AS [Pending_cases_inf]
Resident [Pending_Cases];
outer Join 
LOAD
	[Year (Infringements)]						AS [Year],
	[ISO_code],
	[EU_Infringements_deficit]					AS [EU Infringements Deficit]
Resident EU_Infringements_deficit;
left Join 
LOAD
	[Year EFTA (Infringements)]					AS [Year],
    [ISO_code],
	[No_EU_Infringements_deficit]				AS [No EU Infringements Deficit]
Resident No_EU_Infringements_deficit;
left Join 
Load
	[Year],
	[Changes in the average infringements deficit percentage],
    '-' 								AS [ISO_code]
Resident [Changes in the average Infringements deficit];





Drop Table [ALLMETRICS_TRANS], [indicator 1infg], GT_INF_IND_1_table, [indicator 2infg], [indicator 3infg], [GT_INF_IND_3], [indicator 4infg], [GT_INF_IND_4], [Pending_Cases], [EU_Infringements_deficit], No_EU_Infringements_deficit, [Changes in the average Infringements deficit];



[Types of case]:
LOAD
	[x1val] 								AS [Type of Case],
	[y1val] 								AS [Number of pending infringement cases]

where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_INF_TYP_OF_CAS.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";




[Average duration by sector]:
LOAD
	[x1val] 									AS [Average duration by sector],
    [x2val] 									AS [Average infg duration],
	[x3val] 									AS [Months]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> 'Avg';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_INF_DUR_BY_SEC.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"x3val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";







///$tab 3.- EU Pilot
[EU Pilot Cases]:
LOAD
	[x1val] 							AS [Main policy areas],
    [y1val] 							AS [EU Pilot Cases]
    
where [x1val] <> 'Edition';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_EUP_MAI_POL_ARE.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";





///$tab 4.- IMI
[indicator 1A]:

LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_TOT_REC_1A_2021]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_TOT_REC_1A.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicator 2 acc]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS GT_IMI_ACC_2B_2021
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_ACC_2B.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicator 2 spe]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_SPE_2B_2021]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_SPE_2B.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicator 2 req]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_REQ_2A_2021]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_REQ_2A.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicator 2C req]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_REQ_2C_2021]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_REQ_2C.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicator 2D spe]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_SPE_2D_2021],
	[y2val] 										AS [GT_IMI_SPE_2D_2020],
	[y3val] 										AS [GT_IMI_SPE_2D_2019]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_SPE_2D.csv';

SQL SELECT 
	"x1val",
	"y1val",
	"y2val",
	"y3val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[indicator 2E req]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_REQ_2E_2021]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_REQ_2E.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[indicator 2F spe]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_SPE_2F_2021]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_SPE_2F.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicator 2G req]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_REQ_2G_2021]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_REQ_2G.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[indicator 2H spe]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_SPE_2H_2021]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_SPE_2H.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";




[indicator 2I req]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_REQ_2I_2021]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_REQ_2I.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicator 2K spe]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS [GT_IMI_SPE_2K_2021]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_SPE_2K.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[indicator 3A]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS GT_IMI_REQ_REC_3A_2021
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_REQ_REC_3A.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[indicator 3B]:
LOAD
	[x1val] 										AS [IMI],
	[y1val] 										AS GT_IMI_ANS_IND3.2021
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_ANS_3B.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";





INT_IMI:
LOAD 
	[IMI],
	[GT_IMI_TOT_REC_1A_2021] 						AS val_int_imi
RESIDENT [indicator 1A];
left join
LOAD 
	[IMI],
	[GT_IMI_ACC_2B_2021] 							AS val_int_imi2
RESIDENT [indicator 2 acc];

INT_IMI2:
LOAD 
	[IMI],
	[GT_IMI_REQ_REC_3A_2021] 						AS val_int_imi3
RESIDENT [indicator 3A];
left join
LOAD 
	[IMI],
	[GT_IMI_ANS_IND3.2021] 							AS val_int_imi4
RESIDENT [indicator 3B];



[indicator 4]:
LOAD
	[x1val] 										AS [IMI],
	[x2val] 										AS [Very satisfied_2020],
	[x3val] 										AS [satisfied_2020],
	[x4val] 										AS [Neutral_2020],
	[x5val] 										AS [Dissatisfied_2020],
	[x6val] 										AS [Very dissatisfied_2020]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> 'Rating';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_TIM_4.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"x3val",
	"x4val",
	"x5val",
	"x6val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";

[indicator 4imi tim]:
NoConcatenate
LOAD
	IMI,
	[Very dissatisfied_2020]/([Dissatisfied_2020] + [Neutral_2020] + [satisfied_2020] + [Very dissatisfied_2020] + [Very satisfied_2020]) 	AS [Indicator 4imi tim Very dissatisfied],
    [Dissatisfied_2020]/([Dissatisfied_2020] + [Neutral_2020] + [satisfied_2020] + [Very dissatisfied_2020] + [Very satisfied_2020]) 		AS [Indicator 4imi tim Dissatisfied],
    [Neutral_2020]/([Dissatisfied_2020] + [Neutral_2020] + [satisfied_2020] + [Very dissatisfied_2020] + [Very satisfied_2020])				AS [Indicator 4imi tim Neutral/Notsure],
	[satisfied_2020]/([Dissatisfied_2020] + [Neutral_2020] + [satisfied_2020] + [Very dissatisfied_2020] + [Very satisfied_2020]) 			AS [Indicator 4imi tim Satisfied],
    [Very satisfied_2020]/([Dissatisfied_2020] + [Neutral_2020] + [satisfied_2020] + [Very dissatisfied_2020] + [Very satisfied_2020]) 		AS [Indicator 4imi tim Very satisfied]
Resident [indicator 4];


[indicator 5]:
NoConcatenate
LOAD
	[x1val] 										AS [IMI],
	[x2val] 										AS [GT_IMI_EFF_IND5.Very Satisfied_2020],
	[x3val] 										AS [GT_IMI_EFF_IND5.Satisfied_2020],
	[x4val] 										AS [GT_IMI_EFF_IND5.Neutral_2020],
	[x5val] 										AS [GT_IMI_EFF_IND5.Dissatisfied_2020],
	[x6val] 										AS [GT_IMI_EFF_IND5.Very Dissatisfied_2020]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> 'Rating';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_EFF_5.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"x3val",
	"x4val",
	"x5val",
	"x6val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";
    
    
[indicator 5imi tim]:
NoConcatenate
LOAD
	[IMI],
	[GT_IMI_EFF_IND5.Very Dissatisfied_2020]/([GT_IMI_EFF_IND5.Dissatisfied_2020]+[GT_IMI_EFF_IND5.Very Dissatisfied_2020]+[GT_IMI_EFF_IND5.Neutral_2020]+[GT_IMI_EFF_IND5.Satisfied_2020]+[GT_IMI_EFF_IND5.Very Satisfied_2020]) 	AS [Indicator 5imi tim Very dissatisfied],  
    [GT_IMI_EFF_IND5.Dissatisfied_2020]/([GT_IMI_EFF_IND5.Dissatisfied_2020]+[GT_IMI_EFF_IND5.Very Dissatisfied_2020]+[GT_IMI_EFF_IND5.Neutral_2020]+[GT_IMI_EFF_IND5.Satisfied_2020]+[GT_IMI_EFF_IND5.Very Satisfied_2020]) 		AS [Indicator 5imi tim Dissatisfied],
	[GT_IMI_EFF_IND5.Neutral_2020]/([GT_IMI_EFF_IND5.Dissatisfied_2020]+[GT_IMI_EFF_IND5.Very Dissatisfied_2020]+[GT_IMI_EFF_IND5.Neutral_2020]+[GT_IMI_EFF_IND5.Satisfied_2020]+[GT_IMI_EFF_IND5.Very Satisfied_2020]) 			AS [Indicator 5imi tim Neutral/Notsure],
	[GT_IMI_EFF_IND5.Satisfied_2020]/([GT_IMI_EFF_IND5.Dissatisfied_2020]+[GT_IMI_EFF_IND5.Very Dissatisfied_2020]+[GT_IMI_EFF_IND5.Neutral_2020]+[GT_IMI_EFF_IND5.Satisfied_2020]+[GT_IMI_EFF_IND5.Very Satisfied_2020]) 			AS [Indicator 5imi tim Satisfied],
	[GT_IMI_EFF_IND5.Very Satisfied_2020]/([GT_IMI_EFF_IND5.Dissatisfied_2020]+[GT_IMI_EFF_IND5.Very Dissatisfied_2020]+[GT_IMI_EFF_IND5.Neutral_2020]+[GT_IMI_EFF_IND5.Satisfied_2020]+[GT_IMI_EFF_IND5.Very Satisfied_2020]) 		AS [Indicator 5imi tim Very satisfied]
Resident [indicator 5]; 





[IMI Info Exchanges]:
LOAD
	text([x1val])									AS [Year],
	[x2val]											AS [IMI Requests],
	[x3val]											AS [IMI Repository entries],
	[x4val]											AS [IMI SOLVIT cases],
	[x5val]											AS [IMI Notifications],
	[x6val]											AS [IMI Alerts],
	[x7val]											AS [IMI EPC applications],
	[x8val]											AS [IMI GDPR Cases],
	[x9val]											AS [IMI NRMM type approvals],
    [x10val] 										AS [IMI Firearms refusals]

where [x1val] <> 'Year';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_ALL_EXC.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"x3val",
	"x4val",
	"x5val",
	"x6val",
	"x7val",
	"x8val",
	"x9val",
	"x10val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Request per quarter]:
LOAD
	[x1val] 										AS [Periods],
	[x2val] 										AS [Professional qualifications],
	[x3val] 										AS [Services],
	[x4val] 										AS [Posting of workers],
	[x5val] 										AS [Other areas]
    
where [x1val] <> 'Label';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_REQ_QUA.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"x3val",
	"x4val",
	"x5val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Request sent]:
NoConcatenate
LOAD
	[x1val] 										AS [GT_IMI_REQ_MS_Policy Area],
	[x2val] 										AS [ISO_code],
    [y1val] 										AS [Request sent]
    
where [x1val] <> 'Policy Area' and [x2val] <> 'UK' and [x2val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_REQ_MS.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Request recieved]:
NoConcatenate
LOAD
	[x1val] 										AS [GT_IMI_REQ_REC_MS_Policy Area],
	[x2val] 										AS [ISO_code],
	[y1val] 										AS [Request recieved]
    
where [x1val] <> 'Policy Area' and [x2val] <> 'UK';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_IMI_REQ_REC_MS.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";




[ALLMETRICS_TRANS_INF_IMI]:
// --------------------------------------------------------------
NoConcatenate
LOAD
    [ISO_code],
    [Year],
    [Transposition gen data],
    [Infringements gen data],
    [IMI gen data],
    [SOLVIT gen data],
	[Indicator 1trans],
	[Indicator 2trans],
	[Indicator 3trans],
	[Indicator 4trans],
	[Indicator 4.2trans],
	[Indicator 4.2Btrans],
	[Indicator 5trans],
	[Transposition Deficit],
	[No EU Trans Directives],
	[EU Transposition Deficit],
	[No EU Transposition Deficit],
    [Directives completeness],
	[Changes in the average transposition deficit percentage],
	[Value_incompleteness],
// --------------------------------------------------------------
    [Indicator 1infg],				
	[Indicator 1.2infg],
	[Indicator 2infg],
	[Indicator 3infg],
    [Indicator 3.2infg],
	[Indicator 4infg],
    [Indicator 4.2infg],
	[Pending_cases_inf],
	[EU Infringements Deficit],
	[No EU Infringements Deficit],
	[Changes in the average infringements deficit percentage]
Resident [ALLMETRICS_TRANS_INF];
// --------------------------------------------------------------
left Join
LOAD 
	[IMI] 											AS [ISO_code],
    round((val_int_imi2*100/val_int_imi),0.1) 		AS [Indicator 1imi],
    round([val_int_imi] , 0.1)						AS [Indicator 1Aimi],
    round([val_int_imi2] , 0.1) 					As [Indicator 1Bimi],
    'Current'										AS Year
RESIDENT INT_IMI;
left join
LOAD 
	[IMI] 											AS [ISO_code],
	round( [GT_IMI_SPE_2B_2021], 0.1) 				AS [Indicator 2imi],
    'Current'										AS Year
RESIDENT [indicator 2 spe];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	round( [GT_IMI_REQ_2A_2021], 0.1) 				AS [Indicator 2imi req],
    'Current'										AS Year
RESIDENT [indicator 2 req];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	round( [GT_IMI_REQ_2C_2021], 0.1) 				AS [Indicator 2imi C req],
    'Current'										AS Year
RESIDENT [indicator 2C req];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	round( [GT_IMI_SPE_2D_2021], 0.1) 				AS [Indicator 2imi spe],
    'Current'										AS Year
RESIDENT [indicator 2D spe];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	round( [GT_IMI_REQ_2E_2021], 0.1) 				AS [Indicator 2imi E req],
    'Current'										AS Year
RESIDENT [indicator 2E req];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	round( [GT_IMI_SPE_2F_2021], 0.1) 				AS [Indicator 2imi F spe],
    'Current'										AS Year
RESIDENT [indicator 2F spe];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	[GT_IMI_REQ_2G_2021] 							AS [Indicator 2imi G req],
    'Current'										AS Year
RESIDENT [indicator 2G req];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	 [GT_IMI_SPE_2H_2021] 							AS [Indicator 2imi H spe],
    'Current'										AS Year
RESIDENT [indicator 2H spe];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	[GT_IMI_REQ_2I_2021] 							AS [Indicator 2imi I req],
    'Current'										AS Year
RESIDENT [indicator 2I req];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	[GT_IMI_SPE_2K_2021] 							AS [Indicator 2imi K spe],
    'Current'										AS Year
RESIDENT [indicator 2K spe];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	round( (val_int_imi4*100/val_int_imi3), 0.1) 	AS [Indicator 3imi],
    round( val_int_imi3, 0.1)						AS [Indicator 3Aimi],
    round( val_int_imi4, 0.1)						AS [Indicator 3Bimi],
    'Current'										AS Year
RESIDENT INT_IMI2;
left join
LOAD 
	[IMI]											AS [ISO_code],
	round((([Dissatisfied_2020] + [Very dissatisfied_2020])/([Neutral_2020]+[satisfied_2020]+[Very satisfied_2020]+[Dissatisfied_2020] + [Very dissatisfied_2020]))*100, 0.1) 	AS [Indicator 4imi],
    'Current'										AS Year
RESIDENT [indicator 4];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	[Indicator 4imi tim Very dissatisfied],
    [Indicator 4imi tim Dissatisfied],
    [Indicator 4imi tim Neutral/Notsure],
    [Indicator 4imi tim Satisfied],			
    [Indicator 4imi tim Very satisfied],
    'Current'										AS Year
RESIDENT [indicator 4imi tim];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	round((([GT_IMI_EFF_IND5.Dissatisfied_2020] + [GT_IMI_EFF_IND5.Very Dissatisfied_2020])/([GT_IMI_EFF_IND5.Dissatisfied_2020] + [GT_IMI_EFF_IND5.Very Dissatisfied_2020]+[GT_IMI_EFF_IND5.Neutral_2020]+[GT_IMI_EFF_IND5.Satisfied_2020]+[GT_IMI_EFF_IND5.Very Satisfied_2020]))*100, 0.1) AS [Indicator 5imi],
    'Current'										AS Year
RESIDENT [indicator 5];
left join
LOAD 
	[IMI] 											AS [ISO_code],
	[Indicator 5imi tim Very dissatisfied],
    [Indicator 5imi tim Dissatisfied],
    [Indicator 5imi tim Neutral/Notsure],
    [Indicator 5imi tim Satisfied],			
    [Indicator 5imi tim Very satisfied],
    'Current'										AS Year
RESIDENT [indicator 5imi tim];
outer Join
LOAD
	[Periods] 										AS [Year],
	[Professional qualifications],
	[Services],
	[Posting of workers],
	[Other areas],
    '-'												AS [ISO_code]
Resident [Request per quarter];
left Join
LOAD
	[GT_IMI_REQ_MS_Policy Area],
	[ISO_code],
    [Request sent],
    'Current'										AS Year
Resident [Request sent];
left Join
LOAD
	[GT_IMI_REQ_REC_MS_Policy Area],
	[ISO_code],
	[Request recieved],
    'Current'										AS Year
Resident [Request recieved];
outer join
LOAD
	[Year],
	[IMI Requests],
	[IMI Repository entries],
	[IMI SOLVIT cases],
	[IMI Notifications],
	[IMI Alerts],
	[IMI EPC applications],
	[IMI GDPR Cases],
	[IMI NRMM type approvals],
   	[IMI Firearms refusals]
Resident [IMI Info Exchanges];

Drop Table ALLMETRICS_TRANS_INF, [Request per quarter], [Request sent], [Request recieved], [IMI Info Exchanges];
Drop Table [indicator 1A], [indicator 2 acc], [indicator 2 spe], [indicator 2 req], [indicator 2C req], [indicator 2D spe], [indicator 2E req], [indicator 2F spe], [indicator 2G req], [indicator 2H spe], [indicator 2I req], [indicator 2K spe], [indicator 3A], [indicator 3B], INT_IMI, INT_IMI2, [indicator 4], [indicator 4imi tim], [indicator 5], [indicator 5imi tim]; 



































///$tab 5.- TRIS
[Drafts notified]:
LOAD
	[x1val] 										AS [TRIS],
    [y1val] 										AS [Number of drafts]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_NOT.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[Drafts notified by sector]:
LOAD
	[x1val] 										AS [GT_TRI_NOT_SEC_Edition],
	[y1val] 										AS [Number of drafts by sector]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_BY_SEC.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Number of reactions sent 1]:
LOAD
	[x1val] 										AS [TRIS],
    [y1val] 										AS [Number of reactions sent 1]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_REA_REC_EC_1.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";

[Number of reactions sent 2]:
LOAD
	[x1val] 										AS [TRIS],
	[y1val] 										AS [Number of reactions sent 2]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_REA_REC_EC_12.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";

[Number of reactions sent 3]:
LOAD
	[x1val] 										AS [TRIS],
	[y1val] 										AS [Number of reactions sent 3]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_REA_REC_EC_2.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[GT_TRI_REA_SEN_BY_MS_1]:
LOAD
	[x1val] 										AS [TRIS],
	[y1val] 										AS [Draft technical regulation 1]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_REA_SEN_BY_MS_1.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[GT_TRI_REA_SEN_BY_MS_2]:
LOAD
	[x1val] 										AS [TRIS],
    [y1val] 										AS [Draft technical regulation 2]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_REA_SEN_BY_MS_2.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Number of reactions received by Member 1]: 
LOAD
	[x1val] 										AS [TRIS],
	[y2val] 										AS [Number of reactions received by Member 1]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_REA_REC_MS_1.csv';

SQL SELECT 
	"x1val",
	"y2val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Number of reactions received by Member 2]:
LOAD
	[x1val] 										AS [TRIS],
	[y2val] 										AS [Number of reactions received by Member 2]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_REA_REC_MS_2.csv';

SQL SELECT 
	"x1val",
	"y2val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Contributions received from stakeholders]:
LOAD
	[x1val] 										AS [TRIS],
	[y1val] 										AS [Contributions received from stakeholders]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_REA_STA.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[Total notifications]:
LOAD	
	[x1val] 										AS [TRIS],
	[y1val] 										AS [Total notifications]
    
Where [x1val]<>'Member State';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_TOT_NOT.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[Legal basis]:
LOAD	
	[x1val] 										AS [LEG_BAS],
	[y1val] 										AS [LEG_BAS_LastYear]
	
Where [x1val]<>'Legal Base';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_NOT_LEG_BAS.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Sectorial breakdown]:
LOAD	
	[x1val] 										AS [NEW_Sector],
	[y1val] 										AS [Sectorial breakdown]
    
where [x1val] <> 'Sector';
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_NOT_SEC_NEW.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[Reactions issued]:
LOAD	
	[x1val] 										AS [Reactions issued Author],
	[x2val] 										AS [Reactions issued Number]
    
where [x1val] <> 'Author';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_TRI_REA_AUT.csv';

SQL SELECT 
	"x1val",
	"x2val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";






[ALLMETRICS_TRANS_INF_IMI_TRIS]:
// --------------------------------------------------------------
NoConcatenate
LOAD
    [ISO_code],
    [Year],
    [Transposition gen data],
    [Infringements gen data],
    [IMI gen data],
    [SOLVIT gen data],
	[Indicator 1trans],
	[Indicator 2trans],
	[Indicator 3trans],
	[Indicator 4trans],
	[Indicator 4.2trans],
	[Indicator 4.2Btrans],
	[Indicator 5trans],
	[Transposition Deficit],
	[No EU Trans Directives],
	[EU Transposition Deficit],
	[No EU Transposition Deficit],
    [Directives completeness],
	[Changes in the average transposition deficit percentage],
	[Value_incompleteness],
// --------------------------------------------------------------
    [Indicator 1infg],				
	[Indicator 1.2infg],
	[Indicator 2infg],
	[Indicator 3infg],
    [Indicator 3.2infg],
	[Indicator 4infg],
    [Indicator 4.2infg],
	[Pending_cases_inf],
	[EU Infringements Deficit],
	[No EU Infringements Deficit],
	[Changes in the average infringements deficit percentage],
// --------------------------------------------------------------
	[Indicator 1imi],
    [Indicator 1Aimi],
    [Indicator 1Bimi],
	[Indicator 2imi],
	[Indicator 2imi req],
	[Indicator 2imi C req],
	[Indicator 2imi spe],
	[Indicator 2imi E req],
	[Indicator 2imi F spe],
	[Indicator 2imi G req],
	[Indicator 2imi H spe],
	[Indicator 2imi I req],
	[Indicator 2imi K spe],
	[Indicator 3imi],
    [Indicator 3Aimi],
    [Indicator 3Bimi],
	[Indicator 4imi],
	[Indicator 4imi tim Very dissatisfied],
    [Indicator 4imi tim Dissatisfied],
    [Indicator 4imi tim Neutral/Notsure],
    [Indicator 4imi tim Satisfied],			
    [Indicator 4imi tim Very satisfied],
	[Indicator 5imi],
	[Indicator 5imi tim Very dissatisfied],
    [Indicator 5imi tim Dissatisfied],
    [Indicator 5imi tim Neutral/Notsure],
    [Indicator 5imi tim Satisfied],			
    [Indicator 5imi tim Very satisfied],
	[Professional qualifications],
	[Services],
	[Posting of workers],
	[Other areas],
	[GT_IMI_REQ_MS_Policy Area],
    [Request sent],
	[GT_IMI_REQ_REC_MS_Policy Area],
	[Request recieved],
    [IMI Requests],
	[IMI Repository entries],
	[IMI SOLVIT cases],
	[IMI Notifications],
	[IMI Alerts],
	[IMI EPC applications],
	[IMI GDPR Cases],
	[IMI NRMM type approvals],
   	[IMI Firearms refusals]
Resident [ALLMETRICS_TRANS_INF_IMI];
// --------------------------------------------------------------
outer Join
LOAD
	[TRIS] 											AS [ISO_code],
	[Number of drafts],
    'Current' 										AS [Year]
Resident [Drafts notified];
left Join
LOAD 
	[TRIS] 											AS [ISO_code],
	[Number of reactions sent 1],
    'Current' 										AS [Year]
Resident [Number of reactions sent 1];
left Join
LOAD 
	[TRIS] 											AS [ISO_code],
	[Number of reactions sent 2],
    'Current' 										AS [Year]
Resident [Number of reactions sent 2];
left Join
LOAD 
	[TRIS] 											AS [ISO_code],
	[Number of reactions sent 3],
    'Current' 										AS [Year]
Resident [Number of reactions sent 3];
left Join
LOAD 
	[TRIS] 											AS [ISO_code],
	[Draft technical regulation 1],
    'Current' 										AS [Year]
Resident [GT_TRI_REA_SEN_BY_MS_1];
left Join
LOAD 
	[TRIS] 											AS [ISO_code],
	[Draft technical regulation 2],
    'Current' 										AS [Year]
Resident [GT_TRI_REA_SEN_BY_MS_2];
left Join
LOAD
	[TRIS] 											AS [ISO_code],
	[Total notifications],
    'Current' 										AS [Year]
Resident [Total notifications];
left Join
LOAD
	[TRIS] 											AS [ISO_code],
	[Number of reactions received by Member 1],
    'Current' 										AS [Year]
Resident [Number of reactions received by Member 1];
left Join
LOAD
	[TRIS] 											AS [ISO_code],
	[Number of reactions received by Member 2],
    'Current' 										AS [Year]
Resident [Number of reactions received by Member 2];
left Join
LOAD
	[TRIS] 											AS [ISO_code],
	[Contributions received from stakeholders],
    'Current' 										AS [Year]
Resident [Contributions received from stakeholders];


Drop Table ALLMETRICS_TRANS_INF_IMI, [Drafts notified], [Number of reactions sent 1], [Number of reactions sent 2], [Number of reactions sent 3], [GT_TRI_REA_SEN_BY_MS_1], [GT_TRI_REA_SEN_BY_MS_2], [Total notifications], [Number of reactions received by Member 1], [Number of reactions received by Member 2], [Contributions received from stakeholders];
























///$tab 6.- SOLVIT
[indicator 1 solvit]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Indicator 1 solvit]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '' ;
    
LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_HOM_FIR_RES_1.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";




[indicator 2 solvit]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Indicator 2 solvit]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_HOM_PREP_TIME_2.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[indicator 3 solvit]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Indicator 3 solvit]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_HOM_TIM_TO_ACC_3.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";




[indicator 4 solvit]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Indicator 4 solvit]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_HOM_TIM_TO_NOT_ACC_4.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";




[indicator 5 solvit]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Indicator 5 solvit]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_LEA_TIM_TO_ACC_5.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[indicator 6 solvit]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Indicator 6 solvit]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_LEA_RES_TIM_6.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[indicator 7 solvit]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Indicator 7 solvit]
    
where [x1val] <> 'Edition' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_RES_RAT_COU_7.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Overall caseload]:
LOAD
	Text([x1val]) 						AS [Year_cases],
	[x2val] 							AS [CasesofCas]
    
where [x1val] <> 'Year';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_OVE_CAS.csv';

SQL SELECT 
	"x1val",
	"x2val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Cases distribution 1]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Distribution HOM]
    
where [x1val] <> 'Country' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_DIS_CAS_HOM.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Cases distribution 2]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Distribution LEA]
    
where [x1val] <> 'Country' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_DIS_CAS_LEA.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Cases submited by countries]:
LOAD
	[x1val] 							AS [ISO_code],
    [y1val] 							AS [Solvit_Cases_submited_2020],
	[y2val] 							AS [Solvit_Cases_submited_2019],
	[y3val] 							AS [Solvit_Cases_submited_2018]
    
where [x1val] <> 'Country' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_CAS_SUB_MS.csv';

SQL SELECT 
	"x1val",
	"y1val",
	"y2val",
	"y3val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";


[Cases received by country]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Solvit_Cases_received_2020],
	[y2val] 							AS [Solvit_Cases_received_2019],
	[y3val] 							AS [Solvit_Cases_received_2018]
    
where [x1val] <> 'Country' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_CAS_REC_MS.csv';

SQL SELECT 
	"x1val",
	"y1val",
	"y2val",
	"y3val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Problem areas]:
LOAD
	[x1val] 							AS [Problem areas],
	[y1val] 							AS [GT_SOL_PRP_ARE.2021]
    
where [x1val] <> 'Area';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_PRP_ARE.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Legal areas]:
LOAD
	[x1val] 							AS [Legal areas],
	[y1val] 							AS [GT_SOL_LEG_ARE.2021]
    
where [x1val] <> 'Area';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_LEG_ARE.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Business cases vs. citizens cases]:
LOAD
	[x1val] 							AS [Year_BUS_CIT],
	[x2val] 							AS [Citizens cases],
	[x3val] 							AS [Business cases]
    
where [x1val] <> 'Year';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_BUS_CIT.csv';

SQL SELECT 
	"x1val",
	"x2val",
	"x3val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";



[Business cases by country]:
LOAD
	[x1val] 							AS [ISO_code],
	[y1val] 							AS [Solvit_Cases_ByCountry_2020],
	[y2val] 							AS [Solvit_Cases_ByCountry_2019],
	[y3val] 							AS [Solvit_Cases_ByCountry_2018]
    
where [x1val] <> 'Country' and [x1val] <> 'UK' and [x1val] <> '';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_BIS_MS.csv';

SQL SELECT 
	"x1val",
	"y1val",
	"y2val",
	"y3val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";







[ALLMETRICS_TRANS_INF_IMI_TRIS_SOLVIT]:
// --------------------------------------------------------------
NoConcatenate
LOAD
    [ISO_code],
    [Year],
    [Transposition gen data],
    [Infringements gen data],
    [IMI gen data],
    [SOLVIT gen data],
	[Indicator 1trans],
	[Indicator 2trans],
	[Indicator 3trans],
	[Indicator 4trans],
	[Indicator 4.2trans],
	[Indicator 4.2Btrans],
	[Indicator 5trans],
	[Transposition Deficit],
	[No EU Trans Directives],
	[EU Transposition Deficit],
	[No EU Transposition Deficit],
    [Directives completeness],
	[Changes in the average transposition deficit percentage],
	[Value_incompleteness],
// --------------------------------------------------------------
    [Indicator 1infg],				
	[Indicator 1.2infg],
	[Indicator 2infg],
	[Indicator 3infg],
    [Indicator 3.2infg],
	[Indicator 4infg],
    [Indicator 4.2infg],
	[Pending_cases_inf],
	[EU Infringements Deficit],
	[No EU Infringements Deficit],
	[Changes in the average infringements deficit percentage],
// --------------------------------------------------------------
	[Indicator 1imi],
    [Indicator 1Aimi],
    [Indicator 1Bimi],
	[Indicator 2imi],
	[Indicator 2imi req],
	[Indicator 2imi C req],
	[Indicator 2imi spe],
	[Indicator 2imi E req],
	[Indicator 2imi F spe],
	[Indicator 2imi G req],
	[Indicator 2imi H spe],
	[Indicator 2imi I req],
	[Indicator 2imi K spe],
	[Indicator 3imi],
    [Indicator 3Aimi],
    [Indicator 3Bimi],
	[Indicator 4imi],
	[Indicator 4imi tim Very dissatisfied],
    [Indicator 4imi tim Dissatisfied],
    [Indicator 4imi tim Neutral/Notsure],
    [Indicator 4imi tim Satisfied],			
    [Indicator 4imi tim Very satisfied],
	[Indicator 5imi],
	[Indicator 5imi tim Very dissatisfied],
    [Indicator 5imi tim Dissatisfied],
    [Indicator 5imi tim Neutral/Notsure],
    [Indicator 5imi tim Satisfied],			
    [Indicator 5imi tim Very satisfied],
	[Professional qualifications],
	[Services],
	[Posting of workers],
	[Other areas],
	[GT_IMI_REQ_MS_Policy Area],
    [Request sent],
	[GT_IMI_REQ_REC_MS_Policy Area],
	[Request recieved],
    [IMI Requests],
	[IMI Repository entries],
	[IMI SOLVIT cases],
	[IMI Notifications],
	[IMI Alerts],
	[IMI EPC applications],
	[IMI GDPR Cases],
	[IMI NRMM type approvals],
   	[IMI Firearms refusals],
// --------------------------------------------------------------
	[Number of drafts],
	[Number of reactions sent 1],
	[Number of reactions sent 2],
	[Number of reactions sent 3],
	[Draft technical regulation 1],
	[Draft technical regulation 2],
	[Total notifications],
	[Number of reactions received by Member 1],
	[Number of reactions received by Member 2],
	[Contributions received from stakeholders]
Resident [ALLMETRICS_TRANS_INF_IMI_TRIS];
// --------------------------------------------------------------
left Join
LOAD 
	[ISO_code],
	[Indicator 1 solvit],
    'Current'							AS Year
RESIDENT [indicator 1 solvit];
left join 
LOAD 
	[ISO_code],
	[Indicator 2 solvit],
    'Current'							AS Year
RESIDENT [indicator 2 solvit];
left Join
LOAD 
	[ISO_code],
	[Indicator 3 solvit],
    'Current'							AS Year
RESIDENT [indicator 3 solvit];
left Join
LOAD 
	[ISO_code],
	[Indicator 4 solvit],
    'Current'							AS Year
RESIDENT [indicator 4 solvit];
left Join
LOAD 
	[ISO_code],
	[Indicator 5 solvit],
    'Current'							AS Year
RESIDENT [indicator 5 solvit];
left Join
LOAD 
	[ISO_code],
	[Indicator 6 solvit],
    'Current'							AS Year
RESIDENT [indicator 6 solvit];
left Join
LOAD 
	[ISO_code],
	[Indicator 7 solvit],
    'Current'							AS Year
RESIDENT [indicator 7 solvit];
outer Join
LOAD
	[Year_cases] 						AS [Year],
    '-' 								AS [ISO_code],
	[CasesofCas]
Resident [Overall caseload];
left Join
LOAD 
	[ISO_code],
	[Distribution HOM],
    'Current'							AS Year
RESIDENT [Cases distribution 1];
left Join
LOAD 
	[ISO_code],
	[Distribution LEA],
    'Current'							AS Year
RESIDENT [Cases distribution 2];
left Join
LOAD 
	[ISO_code],
	[Solvit_Cases_submited_2020],
	[Solvit_Cases_submited_2019],
	[Solvit_Cases_submited_2018],
    'Current'							AS Year
Resident [Cases submited by countries];
left Join
LOAD
	[ISO_code],
	[Solvit_Cases_received_2020],
	[Solvit_Cases_received_2019],
	[Solvit_Cases_received_2018],
    'Current'							AS Year
Resident [Cases received by country];
left Join
LOAD
	[ISO_code],
	[Solvit_Cases_ByCountry_2020],
	[Solvit_Cases_ByCountry_2019],
	[Solvit_Cases_ByCountry_2018],
    'Current'							AS Year
Resident [Business cases by country];
outer Join
LOAD 
	'-' 								AS [ISO_code],
	Text([Year_BUS_CIT])				AS Year,
	[Citizens cases],
	[Business cases]
Resident [Business cases vs. citizens cases];


Drop Table ALLMETRICS_TRANS_INF_IMI_TRIS;

Drop Table [indicator 1 solvit], [indicator 2 solvit], [indicator 3 solvit], [indicator 4 solvit], [indicator 5 solvit], [indicator 6 solvit], [indicator 7 solvit], [Overall caseload], [Business cases vs. citizens cases], [Cases distribution 1], [Cases distribution 2], [Cases submited by countries], [Cases received by country], [Business cases by country];




[Cases linked to general difficulties]:
LOAD
	[x1val] 							AS [Cases linked to general difficulties],
	[y1val] 							AS [Cases linked to more general difficulties]
    
where [x1val] <> 'Area';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_CAS_LIN_ARE.csv';

SQL SELECT 
	"x1val",
	"y1val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";

///$tab 7.- Final tables
ALLMETRICS:
// --------------------------------------------------------------
NoConcatenate
LOAD
    [ISO_code],
    [Year],
    [Transposition gen data],
    [Infringements gen data],
    [IMI gen data],
    [SOLVIT gen data],
	[Indicator 1trans],
	[Indicator 2trans],
	[Indicator 3trans],
	[Indicator 4trans],
	[Indicator 4.2trans],
	[Indicator 4.2Btrans],
	[Indicator 5trans],
	[Transposition Deficit],
	[No EU Trans Directives],
	[EU Transposition Deficit],
	[No EU Transposition Deficit],
    [Directives completeness],
	[Changes in the average transposition deficit percentage],
	[Value_incompleteness],
// --------------------------------------------------------------
    [Indicator 1infg],				
	[Indicator 1.2infg],
	[Indicator 2infg],
	[Indicator 3infg],
    [Indicator 3.2infg],
	[Indicator 4infg],
    [Indicator 4.2infg],
	[Pending_cases_inf],
	[EU Infringements Deficit],
	[No EU Infringements Deficit],
	[Changes in the average infringements deficit percentage],
// --------------------------------------------------------------
	[Indicator 1imi],
    [Indicator 1Aimi],
    [Indicator 1Bimi],
	[Indicator 2imi],
	[Indicator 2imi req],
	[Indicator 2imi C req],
	[Indicator 2imi spe],
	[Indicator 2imi E req],
	[Indicator 2imi F spe],
	[Indicator 2imi G req],
	[Indicator 2imi H spe],
	[Indicator 2imi I req],
	[Indicator 2imi K spe],
	[Indicator 3imi],
    [Indicator 3Aimi],
    [Indicator 3Bimi],
	[Indicator 4imi],
	[Indicator 4imi tim Very dissatisfied],
    [Indicator 4imi tim Dissatisfied],
    [Indicator 4imi tim Neutral/Notsure],
    [Indicator 4imi tim Satisfied],			
    [Indicator 4imi tim Very satisfied],
	[Indicator 5imi],
	[Indicator 5imi tim Very dissatisfied],
    [Indicator 5imi tim Dissatisfied],
    [Indicator 5imi tim Neutral/Notsure],
    [Indicator 5imi tim Satisfied],			
    [Indicator 5imi tim Very satisfied],
	[Professional qualifications],
	[Services],
	[Posting of workers],
	[Other areas],
	[GT_IMI_REQ_MS_Policy Area],
    [Request sent],
	[GT_IMI_REQ_REC_MS_Policy Area],
	[Request recieved],
    [IMI Requests],
	[IMI Repository entries],
	[IMI SOLVIT cases],
	[IMI Notifications],
	[IMI Alerts],
	[IMI EPC applications],
	[IMI GDPR Cases],
	[IMI NRMM type approvals],
   	[IMI Firearms refusals],
// --------------------------------------------------------------
	[Number of drafts],
	[Number of reactions sent 1],
	[Number of reactions sent 2],
	[Number of reactions sent 3],
	[Draft technical regulation 1],
	[Draft technical regulation 2],
	[Total notifications],
	[Number of reactions received by Member 1],
	[Number of reactions received by Member 2],
	[Contributions received from stakeholders],
// --------------------------------------------------------------
	[Indicator 1 solvit],
	[Indicator 2 solvit],
	[Indicator 3 solvit],
	[Indicator 4 solvit],
	[Indicator 5 solvit],
	[Indicator 6 solvit],
	[Indicator 7 solvit],
	[CasesofCas],
	[Distribution HOM],
	[Distribution LEA],
	[Solvit_Cases_submited_2020],
	[Solvit_Cases_submited_2019],
	[Solvit_Cases_submited_2018],
	[Solvit_Cases_received_2020],
	[Solvit_Cases_received_2019],
	[Solvit_Cases_received_2018],
	[Solvit_Cases_ByCountry_2020],
	[Solvit_Cases_ByCountry_2019],
	[Solvit_Cases_ByCountry_2018],
	[Citizens cases],
	[Business cases]
Resident [ALLMETRICS_TRANS_INF_IMI_TRIS_SOLVIT];
left join 
LOAD 
	[ISO_code], 
    Country_ID
Resident Country_DIM;

Drop Field [ISO_code] From ALLMETRICS;

Drop Table ALLMETRICS_TRANS_INF_IMI_TRIS_SOLVIT;

























































///$tab 8.- Maps
[Transposition Map Data AUX]:
NoConcatenate
LOAD distinct
	[Country_ID],
    [Year],
	if( [Indicator 1trans] <= 1, 1, if( [Indicator 1trans] > 1, -1, 0))															AS [Trans Val1],
	if( [Indicator 2trans] > 0, -1, if( [Indicator 2trans] < 0, 1, 0)) 															AS [Trans Val2],
    if( [Indicator 3trans] > 0, -1, if( [Indicator 3trans] <= 0, 1, 0))															AS [Trans Val3],
	if( [Indicator 4trans] < $(resAvgTra4)*0.9, 1, if( [Indicator 4trans] > $(resAvgTra4)*1.1, -1, if([Indicator 4trans] >= $(resAvgTra4)*0.9 and [Indicator 4trans] <= $(resAvgTra4)*1.1, 0)))	AS [Trans Val4],
    if( [Indicator 5trans] < $(resAvgTra5)*0.9, 1, if( [Indicator 5trans] > $(resAvgTra5)*1.1, -1, if([Indicator 5trans] >= $(resAvgTra5)*0.9 and [Indicator 5trans] <= $(resAvgTra5)*1.1, 0)))	AS [Trans Val5]
    
Resident ALLMETRICS
where not IsNull([Indicator 1trans]);


[Transposition Map Data]:
NoConcatenate 
LOAD 
	[Country_ID],
    [Year],
    [Trans Val1],
	[Trans Val2],
	[Trans Val3],
	[Trans Val4],
	[Trans Val5],
	 ([Trans Val1] + [Trans Val2] + [Trans Val3] + [Trans Val4] + [Trans Val5]) 				AS SumValueTransMap
Resident [Transposition Map Data AUX];

Drop Table [Transposition Map Data AUX];

// --------------------------------------------------------------
[Ingringements Map Data AUX]:
NoConcatenate
LOAD distinct
	[Country_ID],
    [Year],
	if( [Indicator 1infg] < round($(resAvgInf1)*0.9), 1, if( [Indicator 1infg] > round($(resAvgInf1)*1.1), -1, if([Indicator 1infg] >= round($(resAvgInf1)*0.9) and [Indicator 1infg] <= round($(resAvgInf1)*1.1), 0)))	AS [Infg Val1],
	if( [Indicator 2infg] > 0, -1, if( [Indicator 2infg] < 0, 1, 0)) 															AS [Infg Val2],
    if( [Indicator 3infg] < round($(resAvgInf3)*0.9), 1, if( [Indicator 3infg] > round($(resAvgInf3)*1.1), -1, if([Indicator 3infg] >= round($(resAvgInf3)*0.9) and [Indicator 3infg] <= round($(resAvgInf3)*1.1), 0)))	AS [Infg Val3],   
	if( [Indicator 4infg] < 8 and [Indicator 4infg] <> 'null', 1, if( [Indicator 4infg] > 18 and [Indicator 4infg] <> 'null', -1, if ([Indicator 4infg] >= 8 and [Indicator 4infg] <= 18 or IsNull([Indicator 4infg]) or [Indicator 4infg] = 'null', 0)))  AS [Infg Val4]   
Resident ALLMETRICS
where not IsNull([Indicator 1infg]);


[Ingringements Map Data]:
NoConcatenate
LOAD 
	[Country_ID],
    [Year],
    [Infg Val1],
	[Infg Val2],
	[Infg Val3], 
	[Infg Val4],
	 ([Infg Val1] + [Infg Val2] + [Infg Val3] + [Infg Val4]) 									AS SumValueInfgMap
Resident [Ingringements Map Data AUX];

Drop Table [Ingringements Map Data AUX];


// --------------------------------------------------------------
[IMI Map Data AUX]:
NoConcatenate
LOAD distinct
	[Country_ID],
    [Year],
	if( [Indicator 1imi] >= 80 	and not isnull([Indicator 1imi]),  1, if( [Indicator 1imi] < 60  and not isnull([Indicator 1imi]), -1, if ( [Indicator 1imi] = 0 or isnull([Indicator 1imi]), 0, 0)))		AS [IMI Val1],
	if( [Indicator 2imi] < 16   and not isnull([Indicator 2imi]),  1, if( [Indicator 2imi] > 25  and not isnull([Indicator 2imi]), -1, if ( [Indicator 2imi] = 0 or isnull([Indicator 2imi]), 0, 0))) 		AS [IMI Val2],
    if( [Indicator 3imi] >= 80 	and not isnull([Indicator 3imi]),  1, if( [Indicator 3imi] < 60  and not isnull([Indicator 3imi]), -1, if ( [Indicator 3imi] = 0 or isnull([Indicator 3imi]), 0, 0)))		AS [IMI Val3],
	if( [Indicator 4imi] < 4.5 	and not isnull([Indicator 4imi]),  1, if( [Indicator 4imi] >= 15 and not isnull([Indicator 4imi]), -1, if ( [Indicator 4imi] = 0 or isnull([Indicator 4imi]), 0, 0)))		AS [IMI Val4],
    if( [Indicator 5imi] < 4.5 	and not isnull([Indicator 5imi]),  1, if( [Indicator 5imi] >= 15 and not isnull([Indicator 5imi]), -1, if ( [Indicator 5imi] = 0 or isnull([Indicator 5imi]), 0, 0)))		AS [IMI Val5]
    , 0
Resident ALLMETRICS
where not IsNull([Indicator 1imi]);


[IMI Map Data]:
NoConcatenate 
LOAD 
	[Country_ID],
    [Year],
    [IMI Val1],
	[IMI Val2],
	[IMI Val3],
	[IMI Val4],
	[IMI Val5],
	 ([IMI Val1] + [IMI Val2] + [IMI Val3] + [IMI Val4] + [IMI Val5]) 				AS SumValueIMIMap
Resident [IMI Map Data AUX];

Drop Table [IMI Map Data AUX];

// --------------------------------------------------------------


SOLVIT_MAP:
LOAD 
	[x1val] 				AS ISO_code,
	[x2val] 				AS SOLVITMAP_COLOR,
    'Current'				AS [Year]
    
where [x1val] <> 'Country';

LIB CONNECT TO '$(text_connection)REST_PUB-GT_SOL_MAP.csv (ec2amaz-t6hn9ho_commdes_user1)';

SQL SELECT 
	"x1val",
	"x2val"
FROM CSV (header on, delimiter ",", quote """") "CSV_source";
left Join
LOAD 
	[ISO_code],
	Country_ID
Resident Country_DIM;












ALLMETRICS_maps:
// --------------------------------------------------------------
NoConcatenate
LOAD
    [Country_ID],
    [Year],
    [Transposition gen data],
    [Infringements gen data],
    [IMI gen data],
    [SOLVIT gen data],
	[Indicator 1trans],
	[Indicator 2trans],
	[Indicator 3trans],
	[Indicator 4trans],
	[Indicator 4.2trans],
	[Indicator 4.2Btrans],
	[Indicator 5trans],
	[Transposition Deficit],
	[No EU Trans Directives],
	[EU Transposition Deficit],
	[No EU Transposition Deficit],
    [Directives completeness],
	[Changes in the average transposition deficit percentage],
	[Value_incompleteness],
// --------------------------------------------------------------
    [Indicator 1infg],				
	[Indicator 1.2infg],
	[Indicator 2infg],
	[Indicator 3infg],
    [Indicator 3.2infg],
	[Indicator 4infg],
    [Indicator 4.2infg],
	[Pending_cases_inf],
	[EU Infringements Deficit],
	[No EU Infringements Deficit],
	[Changes in the average infringements deficit percentage],
// --------------------------------------------------------------
	[Indicator 1imi],
    [Indicator 1Aimi],
    [Indicator 1Bimi],
	[Indicator 2imi],
	[Indicator 2imi req],
	[Indicator 2imi C req],
	[Indicator 2imi spe],
	[Indicator 2imi E req],
	[Indicator 2imi F spe],
	[Indicator 2imi G req],
	[Indicator 2imi H spe],
	[Indicator 2imi I req],
	[Indicator 2imi K spe],
	[Indicator 3imi],
    [Indicator 3Aimi],
    [Indicator 3Bimi],
	[Indicator 4imi],
	[Indicator 4imi tim Very dissatisfied],
    [Indicator 4imi tim Dissatisfied],
    [Indicator 4imi tim Neutral/Notsure],
    [Indicator 4imi tim Satisfied],			
    [Indicator 4imi tim Very satisfied],
	[Indicator 5imi],
	[Indicator 5imi tim Very dissatisfied],
    [Indicator 5imi tim Dissatisfied],
    [Indicator 5imi tim Neutral/Notsure],
    [Indicator 5imi tim Satisfied],			
    [Indicator 5imi tim Very satisfied],
	[Professional qualifications],
	[Services],
	[Posting of workers],
	[Other areas],
	[GT_IMI_REQ_MS_Policy Area],
    [Request sent],
	[GT_IMI_REQ_REC_MS_Policy Area],
	[Request recieved],
    [IMI Requests],
	[IMI Repository entries],
	[IMI SOLVIT cases],
	[IMI Notifications],
	[IMI Alerts],
	[IMI EPC applications],
	[IMI GDPR Cases],
	[IMI NRMM type approvals],
   	[IMI Firearms refusals],
// --------------------------------------------------------------
	[Number of drafts],
	[Number of reactions sent 1],
	[Number of reactions sent 2],
	[Number of reactions sent 3],
	[Draft technical regulation 1],
	[Draft technical regulation 2],
	[Total notifications],
	[Number of reactions received by Member 1],
	[Number of reactions received by Member 2],
	[Contributions received from stakeholders],
// --------------------------------------------------------------
	[Indicator 1 solvit],
	[Indicator 2 solvit],
	[Indicator 3 solvit],
	[Indicator 4 solvit],
	[Indicator 5 solvit],
	[Indicator 6 solvit],
	[Indicator 7 solvit],
	[CasesofCas],
	[Distribution HOM],
	[Distribution LEA],
	[Solvit_Cases_submited_2020],
	[Solvit_Cases_submited_2019],
	[Solvit_Cases_submited_2018],
	[Solvit_Cases_received_2020],
	[Solvit_Cases_received_2019],
	[Solvit_Cases_received_2018],
	[Solvit_Cases_ByCountry_2020],
	[Solvit_Cases_ByCountry_2019],
	[Solvit_Cases_ByCountry_2018],
	[Citizens cases],
	[Business cases]
Resident [ALLMETRICS];
// --------------------------------------------------------------
left join //(ALLMETRICS)
LOAD
	[Country_ID],
	[Year],
    [Trans Val1],		
	[Trans Val2],		
	[Trans Val3],		
	[Trans Val4],		
	[Trans Val5],		
	SumValueTransMap	
Resident [Transposition Map Data];
left join
LOAD
	[Country_ID],
	[Year],
    [Infg Val1],
	[Infg Val2],
	[Infg Val3], 
	[Infg Val4],
	SumValueInfgMap	
Resident [Ingringements Map Data];
left Join
LOAD 
	[Country_ID],
    [Year],
    [IMI Val1],
	[IMI Val2],
	[IMI Val3],
	[IMI Val4],
	[IMI Val5],
	SumValueIMIMap
Resident [IMI Map Data];
left Join
LOAD 
	[Country_ID],
    [Year],
	SOLVITMAP_COLOR
Resident [SOLVIT_MAP];

Drop Table ALLMETRICS, [Transposition Map Data], [Ingringements Map Data], [IMI Map Data], [SOLVIT_MAP];






















///$tab Exit
exit Script;